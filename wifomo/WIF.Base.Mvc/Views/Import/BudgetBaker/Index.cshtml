@model IEnumerable<WIF.Core.Models.BBWalletImport>

@{
    ViewData["Title"] = "BB Wallet Records";
}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Dashboard</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a asp-action="Create" type="button" class="btn btn-sm btn-outline-secondary">Create New</a>
        </div>
        <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">Share</button>
            <button type="button" class="btn btn-sm btn-outline-secondary">Export</button>
        </div>
        <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
            <span data-feather="calendar"></span>
            This week
        </button>
    </div>
</div>
<div class="m-0 gap-2 row">
    <div class="col-12 p-0 m-0">
        <div class="card">
            <div class="card-header">
                &nbsp;
            </div>
            <div class="p-0 overflow-auto position-relative card-body">
                <table class="table table-striped table-sm overflow-auto">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Uid)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UserUid)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Account)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Currency)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.RefCurrencyAmount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Type)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PaymentType)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.PaymentTypeLocal)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Note)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Date)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GpsLatitude)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GpsLongitude)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.GpsAccuracyInMeters)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.WarrantyInMonth)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Transfer)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Payee)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Labels)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EnvelopeId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CustomCategory)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedByUserUid)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UpdatedAt)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UpdatedByUserUid)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Uid)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserUid)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Account)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Currency)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RefCurrencyAmount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Type)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PaymentType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PaymentTypeLocal)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Note)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Date)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GpsLatitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GpsLongitude)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GpsAccuracyInMeters)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.WarrantyInMonth)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transfer)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Payee)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Labels)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnvelopeId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomCategory)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedByUserUid)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UpdatedAt)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UpdatedByUserUid)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    var dataSourceOverviewGrid = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: "/BudgetBaker/GetProducts"
                        },
                        parameterMap: function (data, operation) {
                            if (operation == "read") {
                                var pagingString = '"Paging": { "Skip": ' + data.skip + ', "Take": ' + data.pageSize + ' }';
                                var filterString = '';

                                if (data.filter) {
                                    var fltr = [];
                                    data.filter.filters.forEach(function (item) {
                                        fltr.push({ "Field": item["field"], "Value": item["value"], "Operator": item["operator"] });
                                    });
                                    filterString = ', "Filter": ' + JSON.stringify(fltr);
                                }
                                var requestString = '{ ' + pagingString + filterString + ' }';

                                return { mkmversionid: $('#mkmVersionDropdownId').val(), kendoListRequestString: requestString };
                            }
                            if (operation == "create" && data.models) {
                                return { productName: data.models[0].name, mainCategorieID: data.models[0].mainCategorie };
                            }
                        }
                    },
                    serverPaging: true,
                    serverFiltering: true,
                    sort: { field: "productName", dir: "asc" },
                    requestEnd: function (e) {
                        var response = e.response;
                        var type = e.type;
                        if (type !== "read" && type !== undefined) {
                            e.sender.read();
                        }
                    },
                    batch: true,
                    pageSize: 50,
                    schema: {
                        total: "totalEntries",
                        type: "json",
                        data: "entries",
                        model: {
                            id: "id",
                            fields: {
                                id: { field: "id", nullable: false },
                            }
                        }
                    }
                });
</script>

